---
- name: Prepare folder for nss docker-compose project
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  loop:
    - "{{ nss_docker_compose_project_folder }}"
    - "{{ nss_docker_compose_project_folder }}/certs"

- name: Set permissions for the docker compose project folder
  file:
    path: "{{ nss_docker_compose_project_folder }}"
    mode: 0700
    state: directory

- name: Copy nss certificate files
  copy:
    src: "{{ item.src }}"
    dest: "{{ nss_docker_compose_project_folder }}/certs/{{ item.dest }}"
  loop:
    - { src: "{{ nss_ca_file_internal }}", dest: ca.pem }
    - { src: "{{ nss_cert_file_internal }}", dest: edgenode.pem }
    - { src: "{{ nss_cert_key_file_internal }}", dest: edgenode-key.pem }

- name: Add docker-compose.yml
  copy:
    src: docker-compose.yml
    dest: "{{ nss_docker_compose_project_folder }}/docker-compose.yml"

- name: Add nss config.yml
  copy:
    src: config.yml
    mode: 0755
    dest: "{{ nss_docker_compose_project_folder }}/config.yml"

- name: Generate .env file for the docker compose project
  copy:
    dest: "{{ nss_docker_compose_project_folder }}/.env"
    mode: 0755
    content: |
      NSS_IMAGE={{ nss_docker_image }}
      RUST_LOG={{ nss_log_level }}

- name: Start nss docker compose project
  docker_compose:
    project_src: "{{ nss_docker_compose_project_folder }}"
    remove_orphans: true
    pull: true
    state: present

- name: UFW nss
  include_role:
    name: weareinteractive.ufw
  vars:
    ufw_reset: no
    ufw_rules:
      - { port: 40230, rule: allow }
